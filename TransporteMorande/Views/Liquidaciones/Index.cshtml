@model TransporteMorande.Models.App.LiquidacionesViewModel
@{
    Layout = "../Shared/_Layout.cshtml";

}
@section Styles
{
    <link href="../plugins/bower_components/bootstrap-touchspin/dist/jquery.bootstrap-touchspin.min.css" rel="stylesheet" />

    <link href="../plugins/bower_components/datatables/jquery.dataTables.min.css" rel="stylesheet" type="text/css" />
    <link href="https://cdn.datatables.net/buttons/1.2.2/css/buttons.dataTables.min.css" rel="stylesheet" type="text/css" />
    @*<link href="../plugins/bower_components/custom-select/custom-select.css" rel="stylesheet" type="text/css" />*@
    <link href="../plugins/bower_components/bootstrap-select/bootstrap-select.min.css" rel="stylesheet" />
    @*<link rel="stylesheet" href="../plugins/bower_components/dropify/dist/css/dropify.min.css">*@
    <link href="../plugins/bower_components/sweetalert/sweetalert.css" rel="stylesheet" type="text/css">
    <link href="../plugins/bower_components/jquery-wizard-master/css/wizard.css" rel="stylesheet">
    <link href="../plugins/bower_components/multiselect/css/multi-select.css" rel="stylesheet" type="text/css" />
    <link href="~/Scripts/jquery-ui.css" rel="stylesheet" />
    <style>
        .frontdate {
            z-index: 1500 !important; /* has to be larger than 1050 */
        }

        .frontinput {
            z-index: 1650 !important; /* has to be larger than 1050 */
        }

        .frontbusquedaClientes {
            z-index: 1700 !important; /* has to be larger than 1050 */
        }

        td.details-control {
            background: url('../plugins/images/details_open.png') no-repeat center center;
            cursor: pointer;
        }

        tr.shown td.details-control {
            background: url('../plugins/images/details_close.png') no-repeat center center;
        }
    </style>
}

<div class="row bg-title">
    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
        <h4 class="page-title">Mantenedor de Liquidaciones</h4>
    </div>
    <div class="col-lg-9 col-sm-8 col-md-8 col-xs-12">
        @if (User.IsInRole("Administrador"))
        {
        <a href="javascript: void(0);" target="_blank" id="nuevaLiquidacion" class="btn btn-danger pull-right m-l-20 waves-effect waves-light">NUEVA LIQUIDACIÓN</a>

        }
        <ol class="breadcrumb">
            <li><a href="#">Aplicación</a></li>
            <li class="active">Liquidaciones</li>
        </ol>
    </div>
</div>

<div class="row">
    <div class="col-md-3">
        <div class="panel panel-default">
            <div class="panel-heading">
                Criterios de búsqueda
            </div>
            @using (Html.BeginForm("Index", "Liquidaciones", FormMethod.Post, new { @class = "form-horizontal", @id = "form_enviar" }))
            {
                <div class="panel-wrapper collapse in">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-12 col-lg-12 col-sm-6 col-xs-6">
                                <h6>Fecha Inicio</h6>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.busquedaDesde, new { htmlAttributes = new { @id = "FechaDesde", @placeholder = "dd-mm-yyyy", @class = "form-control", @Value = Model.busquedaDesde.Value.ToString("dd-MM-yyyy") } })
                                    <span class="input-group-addon"><i class="icon-calender"></i></span>
                                </div>
                            </div>
                            <div class="col-md-12 col-lg-12 col-sm-6 col-xs-6">

                                <h6>Fecha Término</h6>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.busquedaHasta, new { htmlAttributes = new { @id = "FechaHasta", @placeholder = "dd-mm-yyyy", @class = "form-control", @Value = Model.busquedaHasta.Value.ToString("dd-MM-yyyy") } })
                                    <span class="input-group-addon"><i class="icon-calender"></i></span>
                                </div>
                            </div>
                            <div class="col-md-12 col-lg-12 col-sm-6 col-xs-6">
                                <h6>Estado Liquidación</h6>
                                <div class="input-group">
                                    @Html.DropDownListFor(x => x.estadoSeleccionado, Model.Estados, new { @class = "selectpicker m-b-20", data_style = "btn-default btn-outline", @id = "estadoSeleccionado" })
                                </div>

                            </div>
                            @if (User.IsInRole("Administrador"))
                            {
                                <div class="col-md-12 col-lg-12 col-sm-6 col-xs-6">
                                    <h6>Vendedores</h6>
                                    <div class="input-group">
                                        @Html.DropDownListFor(x => x.vendedorSeleccionado, Model.Vendedores, new { @class = "selectpicker m-b-20", data_style = "btn-default btn-outline", @id = "vendedorSeleccionado" })
                                    </div>

                                </div>
                            }
                        </div>

                    </div>
                    <div class="panel-footer"><button type="submit" id="filtrarLiquidaciones" class="btn btn-success" value="Filtrar">Filtrar</button> </div>
                </div>
            }

        </div>
    </div>
    <div class="col-md-9">
        <div class="white-box">
            <div class="scrollable">
                <div class="table-responsive">
                    <table id="tablaLiquidaciones" class="table m-t-30 table-responsive table-striped">
                        <thead>
                            <tr>
                                <th>Fecha</th>
                                <th>Vendedor</th>
                                <th>Estado</th>
                                <th>Estado</th>
                                <th>Total</th>
                                <th>Acción</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var a in Model.Liquidaciones)
                            {
                                <tr>
                                    <td>@a.Fecha.ToShortDateString()</td>
                                    <td>@a.AspNetUsers1.Nombre @a.AspNetUsers1.Apellido</td>
                                    <td>@Html.DropDownList("EstadoLiquidacionDato", new SelectList(Model.EstadosCombo, a.Estado), new { @class = "form-control", @onchange = "actualizarDato(this)", @data_dato = a.Id })</td>
                                    <td>@a.Estado</td>
                                    <td>@a.Monto</td>
                                    <td>
                                        @if (User.IsInRole("Administrador"))
    {
                                    <button type="button" value="@a.Id" onclick="consultaEliminar(value);" data-toggle="tooltip" data-original-title="Eliminar" class='btn btn-sm btn-icon btn-pure btn-outline trigger-modal-delete'><i class="ti-close" aria-hidden="true"></i></button>
}

                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalNuevaLiquidacion" tabindex="-1" role="dialog" aria-labelledby="">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <div class="white-box">
                    <h3 class="box-title m-b-0">Nueva Liquidación</h3>
                    <small>Transportes Morandé</small>
                    @using (Ajax.BeginForm("Nuevo", "Liquidaciones", new AjaxOptions
                    {
                        InsertionMode = InsertionMode.Replace,
                        UpdateTargetId = "idMensaje",
                        LoadingElementId = "loader2",
                        HttpMethod = "Post"
                    }, new { @class = "form-horizontal form-material", @id = "form_enviarNuevo" }))
                    {
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group m-t-20">
                                    <div class="col-xs-9 col-md-9">
                                        <label>Vendedor</label>
                                        @Html.DropDownListFor(x => x.vendedorNuevaLiquidacionSeleccionado, Model.VendedoresNuevaLiquidacion, new { @class = "form-control", @onchange = "actualizarReservas(this.value)" })

                                    </div>
                                    <div class="col-xs-3 col-md-3">
                                        <label>Total:</label>
                                        <input type="text" id="totalNuevaLiquidacion" value="0" class="form-control" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-xs-12 col-md-12">
                                        <select multiple id="serviciosList" name="serviciosList[]"></select>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-xs-8 col-md-8">
                                        <small>Sólo aparecerán reservas finalizadas</small>
                                    </div>
                                    <div class="col-xs-4 col-md-4">
                                        <button type="button" id="botonGuardarNueva" class="btn btn-success pull-right">Guardar Liquidación</button> 
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    @*<script src="../plugins/bower_components/footable/js/footable.all.min.js"></script>*@

    <script src="../plugins/bower_components/bootstrap-select/bootstrap-select.min.js" type="text/javascript"></script>
    <script src="../plugins/bower_components/datatables/jquery.dataTables.min.js"></script>
    <script src="../plugins/bower_components/dropify/dist/js/dropify.min.js"></script>
    <script src="../plugins/bower_components/bootstrap-touchspin/dist/jquery.bootstrap-touchspin.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-ui.js"></script>
    <script src="../plugins/bower_components/jquery-wizard-master/dist/jquery-wizard.min.js"></script>
    <link rel="stylesheet" href="../plugins/bower_components/jquery-wizard-master/libs/formvalidation/formValidation.min.css">
    <script src="../plugins/bower_components/jquery-wizard-master/libs/formvalidation/formValidation.min.js"></script>
    <script src="../plugins/bower_components/jquery-wizard-master/libs/formvalidation/bootstrap.min.js"></script>


    <script src="../plugins/bower_components/custom-select/custom-select.min.js" type="text/javascript"></script>
    <script src="../plugins/bower_components/bootstrap-select/bootstrap-select.min.js" type="text/javascript"></script>
    <script src="../plugins/bower_components/sweetalert/sweetalert.min.js"></script>
    <script type="text/javascript" src="../plugins/bower_components/multiselect/js/jquery.multi-select.js"></script>

    <script>

        var totalSeleccionado = 0;
        var idServiciosArray = [];
        var vendedorSeleccionado = "";
        $("#botonGuardarNueva").click(function () {
            swal({
                title: "¿Estás seguro?",
                text: "Generará una liquidación para el vendedor " + $("#vendedorNuevaLiquidacionSeleccionado  option:selected").text() + " por un total de " + $("#totalNuevaLiquidacion").val(),
                type: "warning",
                showCancelButton: true,
                confirmButtonText: "Guardar",
                cancelButtonText: "Cancelar",
                closeOnConfirm: false,
                closeOnCancel: false,
                allowOutsideClick: false,
                showLoaderOnConfirm: true,
                preConfirm: function () {
                    return new Promise(function (resolve, reject) {
                        $.ajax({
                            success: function (response) {
                                resolve(response)
                            },
                            error: function (a, b, c) {
                                reject("error message")
                            }
                        })
                    })
                }
            }, function (isConfirm) {
                if (isConfirm) {
                    
                    
                    var model = {
                        Estado: 'Pendiente',
                        Total: $('#totalNuevaLiquidacion').val(),
                        IdReservas: idServiciosArray,
                        IdVendedor: vendedorSeleccionado
                    };
                    $.ajax({
                        type: "POST",
                        url: '/Liquidaciones/NuevaLiquidacion',
                        data: model,
                        dataType: "json",
                        traditional: true,
                        success: function (response) {
                            console.log(response);
                            if (!response.Error) {
                                swal("Liquidación ingresada correctamente", "", "success");
                                setTimeout(function () {
                                    $('#filtrarLiquidaciones').click();
                                }, 2500);

                            }
                            else {
                                swal("Ocurrió un error", "Contáctese con el administrador", "error");
                            }
                        }
                    });
                }
                else {
                    swal("Operación cancelada", "Todo sigue como antes :)", "error");
                }
            });
        });

        function actualizarReservas(vendedor) {
            $.ajax({
                url: '/Liquidaciones/obtenerReservas',
                type: 'POST',
                data: { idVendedor: vendedor },
                cache: false,
                dataType: "json",
                success: function (result) {
                    vendedorSeleccionado = vendedor;
                    $('#serviciosList').multiSelect('refresh');
                    if (Object.keys(result).length > 0) {
                        //var total = 0;
                        $.each(result, function (key, value) {
                            //total = total + value.Total;
                            $('#serviciosList').multiSelect('addOption', { value: value.Id, text: value.Fecha + ': ' + value.Servicio + '&#9;$' + value.Total, index: 0, nested: 'optgroup_label' });
                        });
                    }
                    else
                        $('#serviciosList').multiSelect('addOption', { value: 'SinReserva', text: 'No tiene reservas', index: 0, nested: 'optgroup_label', disabled: true });
                    totalSeleccionado = 0;
                    $("#totalNuevaLiquidacion").val("0");
                    
                },
                error: function (result) {
                    swal("Error", "Ocurrió un error. Contactarse con el administrador.", "error");

                    console.log(result);
                }
            });

        }
        function actualizarDato(input) {
            var nuevoEstado = input.value;
            var idLiquidacion = input.dataset.dato;
            $.ajax({
                url: '/Liquidaciones/cambiarEstado',
                type: 'POST',
                data: { idLiquidacion: idLiquidacion, nuevoEstado: nuevoEstado },
                cache: false,
                dataType: "json",
                success: function (result) {
                    if (result == "Error") {
                        swal("Error", "Ocurrió un error. Contactarse con el administrador.", "error");
                        console.log(result);
                    }
                },
                error: function (result) {
                    swal("Error", "Ocurrió un error. Contactarse con el administrador.", "error");

                    console.log(result);
                }
            });
        }

        $('#nuevaLiquidacion').click(function () {
            $('#serviciosList').multiSelect('refresh');
            totalSeleccionado = 0;
            $("#totalNuevaLiquidacion").val("0");
            $('#ModalNuevaLiquidacion').modal();
        });


        function cerrarAlerta() {
            $('#filtrarReservas').click();
            $("#ModalNuevaReserva").modal("hide");
        }

        $.datepicker.regional['es'] = {
            closeText: 'Cerrar',
            prevText: '< Ant',
            nextText: 'Sig >',
            currentText: 'Hoy',
            monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
            monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
            dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
            dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mié', 'Juv', 'Vie', 'Sáb'],
            dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sá'],
            weekHeader: 'Sm',
            dateFormat: 'dd-mm-yy',
            firstDay: 1,
            isRTL: false,
            showMonthAfterYear: false,
            yearSuffix: ''
        };
        $.datepicker.setDefaults($.datepicker.regional['es']);

        var editor;

        $(document).ready(function () {

            $('#serviciosList').multiSelect({
                selectableHeader: "<div class='custom-header'>Viajes realizados sin pagar:</div>",
                selectionHeader: "<div class='custom-header'>Viajes a pagar:</div>",
                afterSelect: function (values) {
                    if (values != 'SinReserva') {
                        $.ajax({
                            type: "POST",
                            url: '/Liquidaciones/ObtenerTotal',
                            data: { idReserva: values },
                            cache: false,
                            dataType: "json",
                            success: function (data) {
                                totalSeleccionado += data;
                                $('#totalNuevaLiquidacion').val(number_format(totalSeleccionado, 0));
                                idServiciosArray.push(String(values));
                            },
                            error: function (response) {
                                alert(response.d);
                            }
                        });
                    }
                },
                afterDeselect: function (values) {
                    if (values != 'SinReserva') {
                        $.ajax({
                            type: "POST",
                            url: '/Liquidaciones/ObtenerTotal',
                            data: { idReserva: values },
                            cache: false,
                            dataType: "json",
                            success: function (data) {
                                totalSeleccionado -= data;
                                $('#totalNuevaLiquidacion').val(number_format(totalSeleccionado, 0));
                                var valor = String(values);
                                var index = idServiciosArray.indexOf(valor);
                                if (index > -1) {
                                    idServiciosArray.splice(index, 1);
                                }
                            },
                            error: function (response) {
                                alert(response.d);
                            }
                        });
                    }
                    //alert("Select value: " + values);
                }
            });

            $('#FechaDesde').datepicker({
                autoclose: true,
                todayHighlight: true
            });
            $('#FechaHasta').datepicker({
                autoclose: true,
                todayHighlight: true
            });

            if (AppGlobal.user.role === 'Administrador') {
                var table = $('#tablaLiquidaciones').DataTable(
                    {
                        "language": {
                            "lengthMenu": "Mostrar _MENU_ registros por página",
                            "zeroRecords": "Búsqueda sin resultados",
                            "info": "Página _PAGE_ de _PAGES_",
                            "infoEmpty": "No hay registros",
                            "infoFiltered": "(filtrado de un total de _MAX_ registros)",
                            "search": "Buscar:",
                            "first": "Primera página",
                            "paginate": {
                                "previous": "Anterior",
                                "next": "Siguiente"
                            }
                        },
                        "paging": true,
                        "info": false,
                        "ordering": false,
                        "pageLength": 5,
                        "lengthMenu": [5, 10, 25],
                        "dom": 'Bfrtip',
                        "buttons": [
                            {
                                extend: 'excelHtml5',
                                exportOptions: {
                                    columns: [0, 1, 3, 4]
                                }
                            }
                        ],
                        "columns": [
                            { "data": "Fecha", "width": 65 },
                            { "data": "Vendedor" },
                            { "data": "EstadoCombo" },
                            { "data": "Estado" },
                            { "data": "Total" },
                            { "data": "Acciones", "width": 60 }
                        ],
                        "columnDefs": [
                            {
                                "targets": [3],
                                "visible": false,
                                "searchable": false
                            }
                        ]
                    });
            }
            else if (AppGlobal.user.role === 'Vendedor') {
                var table = $('#tablaLiquidaciones').DataTable(
                    {
                        "language": {
                            "lengthMenu": "Mostrar _MENU_ registros por página",
                            "zeroRecords": "Búsqueda sin resultados",
                            "info": "Página _PAGE_ de _PAGES_",
                            "infoEmpty": "No hay registros",
                            "infoFiltered": "(filtrado de un total de _MAX_ registros)",
                            "search": "Buscar:",
                            "first": "Primera página",
                            "paginate": {
                                "previous": "Anterior",
                                "next": "Siguiente"
                            }
                        },
                        "paging": true,
                        "info": false,
                        "ordering": false,
                        "pageLength": 5,
                        "lengthMenu": [5, 10, 25],
                        "columns": [
                            { "data": "Fecha", "width": 65 },
                            { "data": "Vendedor" },
                            { "data": "EstadoCombo" },
                            { "data": "Estado" },
                            { "data": "Total" },
                            { "data": "Acciones", "width": 60 }
                        ],
                        "columnDefs": [
                            {
                                "targets": [2],
                                "visible": false,
                                "searchable": false
                            }
                        ]
                    });
            }

        });

        function consultaEliminar(id) {
            swal({
                title: "¿Estás seguro?",
                text: "Las reservas asociadas quedarán como pendientes de pago por parte del empleador",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Eliminar",
                cancelButtonText: "Cancelar",
                closeOnConfirm: false,
                closeOnCancel: false,
                allowOutsideClick: false,
                showLoaderOnConfirm: true,
                preConfirm: function () {
                    return new Promise(function (resolve, reject) {
                        $.ajax({
                            success: function (response) {
                                resolve(response)
                            },
                            error: function (a, b, c) {
                                reject("error message")
                            }
                        })
                    })
                }
            }, function (isConfirm) {
                if (isConfirm) {
                    $.ajax({
                        type: "POST",
                        url: '/Liquidaciones/Eliminar',
                        data: { id: id },
                        cache: false,
                        dataType: "json",
                        success: function (response) {
                            console.log(response);
                            if (response == "Exito") {
                                swal("Liquidación eliminada", "", "success");
                                setTimeout(function () {
                                    $('#filtrarLiquidaciones').click();
                                }, 2000);
                            }
                            else {
                                swal("Ocurrió un error", "Contáctese con el administrador", "error");
                            }
                        }
                    });
                }
                else {
                    swal("Operación cancelada", "Todo sigue como antes :)", "error");
                }
            });
        }       
    </script>


    <script src="https://cdn.datatables.net/buttons/1.2.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.2.2/js/buttons.flash.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js"></script>
    <script src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/pdfmake.min.js"></script>
    <script src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.2.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.2.2/js/buttons.print.min.js"></script>



}



